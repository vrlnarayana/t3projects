from sqlalchemy import Column, ForeignKey, Integer, String, Float, Boolean, DateTime
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()


class User(Base):
    __tablename__ = "users"
    record_id = Column(String, primary_key=True)
    first_name = Column(String)
    last_name = Column(String)
    email = Column(String)
    role_id = Column(String)
    alias = Column(Float)
    date_of_birth = Column(Float)
    added_by_id = Column(String)
    modified_by_id = Column(String)
    added_time = Column(String)
    modified_time = Column(String)
    phone = Column(Float)
    mobile = Column(Float)
    website = Column(Float)
    fax = Column(Float)
    profile_id = Column(String)
    street = Column(Float)
    city = Column(Float)
    state = Column(String)
    country = Column(String)
    zip_code = Column(Float)
    language = Column(String)
    country_locale = Column(String)
    time_zone = Column(String)
    time_format = Column(String)
    currency = Column(Float)
    confirmation_status = Column(Integer)
    zuid = Column(Float)
    date_format = Column(String)
    current_shift_id = Column(Float)
    next_shift_id = Column(Float)
    shift_effective_from = Column(Float)
    grouping = Column(String)
    decimal = Column(String)
    sort_order_preference = Column(String)
    name_format = Column(String)
    status_reason = Column(Float)
    reporting_to_id = Column(Float)
    user_status = Column(String)


class Account(Base):
    __tablename__ = "accounts"

    record_id = Column(String, primary_key=True)
    account_owner_id = Column(String, ForeignKey("users.record_id"))
    rating = Column(Float)
    account_name = Column(String)
    phone = Column(String)
    fax = Column(Float)
    parent_account_id = Column(Float)
    website = Column(String)
    ticker_symbol = Column(Float)
    account_type = Column(String)
    ownership = Column(String)
    industry = Column(String)
    employees = Column(Integer)
    annual_revenue = Column(Float)
    sic_code = Column(Float)
    created_by_id = Column(String)
    modified_by_id = Column(String)
    created_time = Column(String)
    modified_time = Column(String)
    currency = Column(Float)
    exchange_rate = Column(Float)
    last_activity_time = Column(String)
    layout_id = Column(String)
    account_number = Column(Integer)
    account_site = Column(Float)
    tag = Column(Float)
    billing_street = Column(String)
    shipping_street = Column(Float)
    billing_city = Column(String)
    shipping_city = Column(Float)
    billing_state = Column(String)
    shipping_state = Column(Float)
    billing_code = Column(Integer)
    shipping_code = Column(Float)
    billing_country = Column(String)
    shipping_country = Column(Float)
    description = Column(String)
    score = Column(Integer)
    positive_score = Column(Integer)
    negative_score = Column(Integer)
    touch_point_score = Column(Integer)
    positive_touch_point_score = Column(Integer)
    negative_touch_point_score = Column(Integer)
    account_image = Column(String)
    user_modified_time = Column(String)
    system_related_activity_time = Column(String)
    user_related_activity_time = Column(String)
    system_modified_time = Column(Float)
    change_log_time = Column(Float)
    locked = Column(Integer)
    last_enriched_time = Column(Float)
    enrich_status = Column(Float)


class AppLogin(Base):
    __tablename__ = "applogin"

    USER = Column(String(20), primary_key=True)
    password = Column(String(20))
    flag = Column(String(2))


class Leads(Base):
    __tablename__ = "leads"
    record_id = Column(String, primary_key=True)
    # lead_owner_id = Column(String, ForeignKey("users.record_id"))
    company = Column(String)
    first_name = Column(String)
    last_name = Column(String)
    full_name = Column(String)
    title = Column(String)
    email = Column(String)
    phone = Column(String)
    fax = Column(Float)
    mobile = Column(String)
    website = Column(String)
    lead_source = Column(String)
    lead_status = Column(String)
    industry = Column(String)
    # no_of_employees = Column(Float)
    annual_revenue = Column(Float)
    rating = Column(Float)
    campaign_source_id = Column(Float)
    email_opt_out = Column(Integer)
    skype_id = Column(String)
    created_by_id = Column(String)
    modified_by_id = Column(String)
    created_time = Column(String)
    modified_time = Column(String)
    salutation = Column(String)
    secondary_email = Column(Float)
    currency = Column(Float)
    exchange_rate = Column(Float)
    last_activity_time = Column(String)
    twitter = Column(String)
    layout_id = Column(String)
    tag = Column(Float)
    street = Column(String)
    city = Column(String)
    state = Column(String)
    zip_code = Column(Integer)
    country = Column(String)
    description = Column(Float)
    score = Column(Integer)
    positive_score = Column(Integer)
    negative_score = Column(Integer)
    touch_point_score = Column(Integer)
    positive_touch_point_score = Column(Integer)
    negative_touch_point_score = Column(Integer)
    lead_image = Column(String)
    user_modified_time = Column(String)
    system_related_activity_time = Column(Float)
    user_related_activity_time = Column(String)
    system_modified_time = Column(Float)
    converted_date_time = Column(Float)
    record_approval_status = Column(Integer)
    is_record_duplicate = Column(Integer)
    lead_conversion_time = Column(Float)
    unsubscribed_mode = Column(Float)
    unsubscribed_time = Column(Float)
    converted_account_id = Column(Float)
    converted_contact_id = Column(Float)
    converted_deal_id = Column(Float)
    change_log_time = Column(Float)
    is_converted = Column(Integer)
    locked = Column(Integer)
    last_enriched_time = Column(Float)
    enrich_status = Column(Float)

    # owner = relationship("Users", foreign_keys=[lead_owner_id])


class Deal(Base):
    __tablename__ = "deals"

    record_id = Column(String, primary_key=True)
    deal_owner_id = Column(String, ForeignKey("users.record_id"))
    amount = Column(Float)
    deal_name = Column(String)
    closing_date = Column(DateTime)
    account_id = Column(String, ForeignKey("accounts.record_id"))
    stage = Column(String)
    type = Column(String)
    probability = Column(Integer, name="probability_(%)")
    expected_revenue = Column(Float)
    next_step = Column(String)
    lead_source = Column(String)
    campaign_source_id = Column(Float)
    contact_id = Column(String, ForeignKey("contacts.record_id"))
    created_by_id = Column(String, ForeignKey("users.record_id"))
    modified_by_id = Column(String, ForeignKey("users.record_id"))
    created_time = Column(DateTime)
    modified_time = Column(DateTime)
    currency = Column(Float)
    exchange_rate = Column(Float)
    last_activity_time = Column(DateTime)
    lead_conversion_time = Column(DateTime)
    sales_cycle_duration = Column(Integer)
    overall_sales_duration = Column(Integer)
    layout_id = Column(String, ForeignKey("layouts.layout_id"))
    tag = Column(Float)
    description = Column(String)
    score = Column(Integer)
    positive_score = Column(Integer)
    negative_score = Column(Integer)
    touch_point_score = Column(Integer)
    positive_touch_point_score = Column(Integer)
    negative_touch_point_score = Column(Integer)
    deal_image = Column(String)
    user_modified_time = Column(DateTime)
    system_related_activity_time = Column(Float)
    user_related_activity_time = Column(DateTime)
    system_modified_time = Column(Float)
    pipeline = Column(String)
    deal_category_status = Column(String)
    change_log_time = Column(Float)
    locked = Column(Integer)
    reason_for_loss = Column(String)
